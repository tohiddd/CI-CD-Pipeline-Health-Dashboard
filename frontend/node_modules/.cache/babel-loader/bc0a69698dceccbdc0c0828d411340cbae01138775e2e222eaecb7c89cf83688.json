{"ast":null,"code":"var _jsxFileName = \"/app/src/components/MetricsCards.js\";\nimport React from 'react';\nimport { Grid, Card, CardContent, Typography, Box, CircularProgress, Chip } from '@mui/material';\nimport { CheckCircle as SuccessIcon, Timer as TimerIcon, TrendingUp as TrendingUpIcon, PlayArrow as RunsIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetricsCards = ({\n  metrics,\n  loading\n}) => {\n  const cards = [{\n    title: 'Success Rate',\n    value: loading ? '...' : `${metrics.successRate || 0}%`,\n    icon: /*#__PURE__*/_jsxDEV(SuccessIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this),\n    color: 'success',\n    description: 'Last 30 days'\n  }, {\n    title: 'Avg Build Time',\n    value: loading ? '...' : `${Math.round((metrics.avgBuildTime || 0) / 60)}m`,\n    icon: /*#__PURE__*/_jsxDEV(TimerIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this),\n    color: 'primary',\n    description: 'Average duration'\n  }, {\n    title: 'Runs Today',\n    value: loading ? '...' : metrics.totalRunsToday || 0,\n    icon: /*#__PURE__*/_jsxDEV(RunsIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this),\n    color: 'info',\n    description: 'Pipeline executions'\n  }, {\n    title: 'Health Score',\n    value: loading ? '...' : calculateHealthScore(metrics),\n    icon: /*#__PURE__*/_jsxDEV(TrendingUpIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this),\n    color: getHealthScoreColor(calculateHealthScore(metrics)),\n    description: 'Overall health'\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 2,\n        sx: {\n          height: '100%',\n          transition: 'transform 0.2s, box-shadow 0.2s',\n          '&:hover': {\n            transform: 'translateY(-2px)',\n            boxShadow: 4\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                color: `${card.color}.main`,\n                mr: 1,\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: card.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"div\",\n              sx: {\n                flexGrow: 1\n              },\n              children: card.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"div\",\n            sx: {\n              mb: 1,\n              fontWeight: 'bold'\n            },\n            children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this) : card.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: card.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), card.title === 'Health Score' && !loading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Chip, {\n              label: getHealthLabel(calculateHealthScore(metrics)),\n              color: card.color,\n              size: \"small\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n// Calculate health score based on success rate and other metrics\n_c = MetricsCards;\nfunction calculateHealthScore(metrics) {\n  if (!metrics || typeof metrics.successRate !== 'number') return 'N/A';\n  const successRate = metrics.successRate;\n  const avgBuildTime = metrics.avgBuildTime || 0;\n  const runsToday = metrics.totalRunsToday || 0;\n\n  // Base score from success rate (0-80 points)\n  let score = successRate * 0.8;\n\n  // Bonus points for reasonable build times (0-10 points)\n  if (avgBuildTime > 0) {\n    if (avgBuildTime < 300) score += 10; // < 5 minutes\n    else if (avgBuildTime < 600) score += 5; // < 10 minutes\n  }\n\n  // Bonus points for activity (0-10 points)\n  if (runsToday > 0) {\n    score += Math.min(runsToday * 2, 10);\n  }\n  return Math.min(Math.round(score), 100);\n}\nfunction getHealthScoreColor(score) {\n  if (score === 'N/A') return 'default';\n  if (score >= 80) return 'success';\n  if (score >= 60) return 'warning';\n  return 'error';\n}\nfunction getHealthLabel(score) {\n  if (score === 'N/A') return 'No Data';\n  if (score >= 80) return 'Excellent';\n  if (score >= 60) return 'Good';\n  if (score >= 40) return 'Fair';\n  return 'Poor';\n}\nexport default MetricsCards;\nvar _c;\n$RefreshReg$(_c, \"MetricsCards\");","map":{"version":3,"names":["React","Grid","Card","CardContent","Typography","Box","CircularProgress","Chip","CheckCircle","SuccessIcon","Timer","TimerIcon","TrendingUp","TrendingUpIcon","PlayArrow","RunsIcon","jsxDEV","_jsxDEV","MetricsCards","metrics","loading","cards","title","value","successRate","icon","fileName","_jsxFileName","lineNumber","columnNumber","color","description","Math","round","avgBuildTime","totalRunsToday","calculateHealthScore","getHealthScoreColor","container","spacing","children","map","card","index","item","xs","sm","md","elevation","sx","height","transition","transform","boxShadow","display","alignItems","mb","mr","variant","component","flexGrow","fontWeight","size","mt","label","getHealthLabel","_c","runsToday","score","min","$RefreshReg$"],"sources":["/app/src/components/MetricsCards.js"],"sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Box,\n  CircularProgress,\n  Chip\n} from '@mui/material';\nimport {\n  CheckCircle as SuccessIcon,\n  Timer as TimerIcon,\n  TrendingUp as TrendingUpIcon,\n  PlayArrow as RunsIcon\n} from '@mui/icons-material';\n\nconst MetricsCards = ({ metrics, loading }) => {\n  const cards = [\n    {\n      title: 'Success Rate',\n      value: loading ? '...' : `${metrics.successRate || 0}%`,\n      icon: <SuccessIcon />,\n      color: 'success',\n      description: 'Last 30 days'\n    },\n    {\n      title: 'Avg Build Time',\n      value: loading ? '...' : `${Math.round((metrics.avgBuildTime || 0) / 60)}m`,\n      icon: <TimerIcon />,\n      color: 'primary',\n      description: 'Average duration'\n    },\n    {\n      title: 'Runs Today',\n      value: loading ? '...' : metrics.totalRunsToday || 0,\n      icon: <RunsIcon />,\n      color: 'info',\n      description: 'Pipeline executions'\n    },\n    {\n      title: 'Health Score',\n      value: loading ? '...' : calculateHealthScore(metrics),\n      icon: <TrendingUpIcon />,\n      color: getHealthScoreColor(calculateHealthScore(metrics)),\n      description: 'Overall health'\n    }\n  ];\n\n  return (\n    <Grid container spacing={3}>\n      {cards.map((card, index) => (\n        <Grid item xs={12} sm={6} md={3} key={index}>\n          <Card \n            elevation={2} \n            sx={{ \n              height: '100%',\n              transition: 'transform 0.2s, box-shadow 0.2s',\n              '&:hover': {\n                transform: 'translateY(-2px)',\n                boxShadow: 4\n              }\n            }}\n          >\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                <Box\n                  sx={{\n                    color: `${card.color}.main`,\n                    mr: 1,\n                    display: 'flex',\n                    alignItems: 'center'\n                  }}\n                >\n                  {card.icon}\n                </Box>\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                  {card.title}\n                </Typography>\n              </Box>\n              \n              <Typography variant=\"h4\" component=\"div\" sx={{ mb: 1, fontWeight: 'bold' }}>\n                {loading ? (\n                  <CircularProgress size={24} />\n                ) : (\n                  card.value\n                )}\n              </Typography>\n              \n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {card.description}\n              </Typography>\n\n              {/* Health Score Badge */}\n              {card.title === 'Health Score' && !loading && (\n                <Box sx={{ mt: 1 }}>\n                  <Chip\n                    label={getHealthLabel(calculateHealthScore(metrics))}\n                    color={card.color}\n                    size=\"small\"\n                    variant=\"outlined\"\n                  />\n                </Box>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\n// Calculate health score based on success rate and other metrics\nfunction calculateHealthScore(metrics) {\n  if (!metrics || typeof metrics.successRate !== 'number') return 'N/A';\n  \n  const successRate = metrics.successRate;\n  const avgBuildTime = metrics.avgBuildTime || 0;\n  const runsToday = metrics.totalRunsToday || 0;\n  \n  // Base score from success rate (0-80 points)\n  let score = successRate * 0.8;\n  \n  // Bonus points for reasonable build times (0-10 points)\n  if (avgBuildTime > 0) {\n    if (avgBuildTime < 300) score += 10; // < 5 minutes\n    else if (avgBuildTime < 600) score += 5; // < 10 minutes\n  }\n  \n  // Bonus points for activity (0-10 points)\n  if (runsToday > 0) {\n    score += Math.min(runsToday * 2, 10);\n  }\n  \n  return Math.min(Math.round(score), 100);\n}\n\nfunction getHealthScoreColor(score) {\n  if (score === 'N/A') return 'default';\n  if (score >= 80) return 'success';\n  if (score >= 60) return 'warning';\n  return 'error';\n}\n\nfunction getHealthLabel(score) {\n  if (score === 'N/A') return 'No Data';\n  if (score >= 80) return 'Excellent';\n  if (score >= 60) return 'Good';\n  if (score >= 40) return 'Fair';\n  return 'Poor';\n}\n\nexport default MetricsCards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}